version: '3.8'

services:
  prod:
    container_name: prod
    build:
      context: ../..
      dockerfile: ../Dockerfile.prod
      args:
        JAR_FILE: /build/libs/*.jar
    image: mimiminu123/globber:prod-latest
    ports:
      - "8080:8080"
    volumes:
      - ../log:/log
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - prod_network

  postgres:
    container_name: postgres_prod
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=globber
      - POSTGRES_USER=globber
      - POSTGRES_PASSWORD=globber123
      - TZ=Asia/Seoul
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - prod_network

  redis:
    container_name: redis_prod
    image: redis:7.2
    ports:
      - "6379:6379"
    command: [ "redis-server", "--cluster-enabled", "no", "--protected-mode", "no" ]
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - prod_network

  promtail:
    container_name: promtail_prod
    image: grafana/promtail:latest
    ports:
      - "9080:9080"
    volumes:
      - ../config/promtail-config-prod.yml:/etc/promtail/promtail.yml
      - ../log:/log
    command: -config.file=/etc/promtail/promtail.yml
    restart: always
    networks:
      - prod_network

networks:
  prod_network:
    external: true

volumes:
  redis_data:
  postgres_data:
